.container {
  height: 100vh;
  width: 100vw;
  position: relative;
  display: grid;
  grid-template-columns: repeat(3, auto);
  grid-template-rows: repeat(2, auto);
  place-items: center center;
  overflow: hidden;
}

.konane-board {
  &-container {
    grid-row: 2/3;
    grid-column: 2;
    border: var(--board-border-width) solid black;
    width: max-content;
    height: max-content;
    margin: 0;
    margin-bottom: 2em;
    bottom: 2em;
    position: relative;
    @media only screen and (max-width: 500px) {
      left: 0;
      margin: 0;
      padding: 0;
      transform: none;
    }
    @media only screen and (max-height: 700px) {
      top: 60px;
      bottom: 0;
    }
  }
  &-row {
    display: flex;
    justify-content: center;
    &:nth-child(1) {
      .konane-board-cell {
        // need to use after b/c the animating border classes use before
        &::after {
          z-index: 20;
          content: attr(data-col);
          height: max-content;
          width: max-content;
          position: absolute;
          transform: translateY(calc(-0.5 * var(--cell-size) - 2em));
          font-size: 1.25em;
        }
      }
    }
    &::before {
      z-index: 20;
      content: attr(data-row);
      height: max-content;
      width: max-content;
      position: absolute;
      right: calc(100% + 2em);
      transform: translateY(calc(var(--cell-size) / 2 - 50%));
    }
  }
  &-cell {
    padding: 0;
    width: var(--cell-size);
    height: var(--cell-size);
    display: flex;
    justify-content: center;
    align-items: center;
    border: none;
    &:focus {
      outline: none;
    }
  }
}

.player-turn-message {
  width: max-content;
  font-size: 2em;
  padding: 0.5em 1em;
  position: relative;
  left: 50%;
  top: 5%;
}

.player-dashboard {
  grid-row: 1;
  grid-column: 2;
  position: relative;
  height: max-content;
  width: calc(8 * var(--cell-size) + 2em);
  display: flex;
  justify-content: space-around;
  align-items: center;
  margin: 0;
  &-human,
  &-computer {
    height: inherit;
    width: max(15vw, 175px);
    text-align: center;
    padding: 1em;
    border: 2px solid black;
  }
  @media only screen and (max-width: 500px) {
    height: 5em;
    width: 80vw;
  }
  @media only screen and (max-height: 650px) {
    top: 1em;
    bottom: 0;
  }
}

.set-player-modal {
  &-content {
    width: 100vw;
    height: 100vh;
    overflow: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    font-weight: bold;
  }
  &-prompt-message {
    position: absolute;
    top: 20vh;
  }
  &-buttons-container {
    display: flex;
    justify-content: space-between;
    width: calc(6 * var(--cell-size));
  }
  &-white-button {
    background: white;
    color: black;
    box-shadow: 0 0 3em 1em white;
  }
  &-black-button {
    background: black;
    color: white;
    box-shadow: 0 0 3em 1em black;
  }
  &-white-button,
  &-black-button {
    font-size: 1.5em;
    border-radius: 50%;
    width: 100px;
    height: 100px;
    border: none;
    &:hover {
      box-shadow: 0 0 3em 1em gold;
      cursor: pointer;
    }
  }
}

.active-action-confirmation-modal {
  position: absolute;
  top: 50vh;
  @media only screen and (max-width: 500px) {
    width: 80vw;
  }
  &-content {
    padding: 5% 10%;
    width: max(30vw, 450px);
    max-width: 80vw;
    div:not(:last-child) {
      margin-bottom: 1em;
    }
  }
  &-prompt {
    font-size: 1.5em;
    position: relative;
    top: 0;
    left: 0;
  }
  &-action-description {
    padding: 0.5em;
  }
  &-buttons {
    display: flex;
    justify-content: flex-end;
    position: relative;
  }
  &-yes-button,
  &-no-button {
    padding: 0.5em 2em;
    &:not(:last-child) {
      margin-right: 1em;
    }
  }
}

.escape-active-cell-button {
  z-index: 100;
  grid-row: 2;
  grid-column: 2/3;
  position: relative;
  border: none;
  top: -52.5%;
  right: calc(-1 * var(--cell-size) * 4 - 1em);
  height: 2em;
  width: 2em;
  padding: 0;
  background: none;
  @media only screen and (max-height: 700px) {
    top: calc(-1 * var(--cell-size) * 4);
    bottom: 0;
  }
  &:hover {
    cursor: pointer;
  }
  &-arrow {
    height: 75%;
    width: 75%;
    border: 3px solid black;
    border-left: none;
    border-top-right-radius: 1em;
    border-bottom-right-radius: 1em;
    &::before {
      $arrow-size: 0.6em;
      position: absolute;
      z-index: 5;
      content: "";
      top: -0.25em;
      left: -0.75em;
      height: 0;
      width: 0;
      background: transparent;
      /* the arrow */
      border-left: $arrow-size solid transparent;
      border-top: $arrow-size solid transparent;
      border-bottom: $arrow-size solid transparent;
      border-right: $arrow-size solid black;
    }
  }
}

.game-history {
  padding: 0.5em;
  height: 15em;
  width: 100%;
  border: 1px solid black;
  white-space: pre-line;
  overflow-y: scroll;
  &-wrapper {
    height: 15em;
    display: flex;
    flex-direction: column-reverse;
  }
  &-title {
    text-align: center;
    margin-bottom: 0;
  }
  &-container {
    height: 15em;
    display: flex;
    flex-direction: column-reverse;
  }
}

.sidebar {
  &-difficulty-buttons-container {
    display: flex;
    justify-content: space-between;
    flex-direction: column;
    align-items: center;
  }
  &-difficulty-button {
    padding: 0;
    width: 15em;
    &-link {
      display: block;
      height: 100%;
      width: 100%;
      padding: 0.5em;
    }
    &:not(:last-child) {
      margin-bottom: 0.5em;
    }
  }
}

.win-screen {
  &::after {
    display: inline;
    height: 100%;
    width: 100%;
    font-size: 10em;
    z-index: 100;
    content: "You Win!";
    position: absolute;
    color: #a2006d;
    text-align: center;
    vertical-align: middle;
    line-height: 100vh;
    // way to have opacity for only parent and not children
    background-color: rgba(255, 255, 255, 0.3);
  }
}

.lose-screen {
  &::after {
    display: absolute;
    height: 100%;
    width: 100%;
    font-size: 10em;
    z-index: 100;
    content: "You Lose!";
    position: absolute;
    color: darkblue;
    text-align: center;
    vertical-align: middle;
    line-height: 100vh;
    // way to have opacity for only parent and not children
    background-color: rgba(255, 255, 255, 0.3);
  }
}
