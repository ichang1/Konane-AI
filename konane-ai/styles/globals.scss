@use "sass:math";

html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

:root {
  --button-border-radius: 1em;
  --board-border-width: 1em;
  --cell-size: min(50px, 100vw / 8 - 2 * var(--board-border-width) / 8);
  --active-cell-border-width: 6px;
  --black-move-cell-color: darkgreen;
  --black-remove-cell-color: darkred;
  --white-move-cell-color: limegreen;
  --white-remove-cell-color: red;
  --black: black;
  --white: #faebd7;
  --checker-diameter: 75%;
  --confetti-amount: 10;
}

// https://stackoverflow.com/a/52963366
@mixin rotating-border($border-width, $border-color, $width, $height) {
  position: relative;
  width: $width;
  height: $height;
  &::before {
    content: "";
    z-index: 10;
    width: inherit;
    height: inherit;
    top: 0;
    left: 0;
    position: absolute;
    background: linear-gradient(90deg, $border-color 50%, transparent 50%),
      linear-gradient(90deg, $border-color 50%, transparent 50%),
      linear-gradient(0deg, $border-color 50%, transparent 50%),
      linear-gradient(0deg, $border-color 50%, transparent 50%);
    background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
    background-size: 15px $border-width, 15px $border-width, $border-width 15px,
      $border-width 15px;
    background-position: left top, right bottom, left bottom, right top;
    animation: border-dance 4s infinite linear;
  }

  // https://stackoverflow.com/a/52963366
  @keyframes border-dance {
    0% {
      background-position: left top, right bottom, left bottom, right top;
    }
    100% {
      background-position: left 200px top, right 200px bottom, left bottom 200px,
        right top 200px;
    }
  }
}

.rotating-cell-border {
  &-black-primary {
    @include rotating-border(
      var(--active-cell-border-width),
      var(--black-remove-cell-color),
      var(--cell-size),
      var(--cell-size)
    );
  }
  &-black-secondary {
    @include rotating-border(
      var(--active-cell-border-width),
      var(--black-move-cell-color),
      var(--cell-size),
      var(--cell-size)
    );
  }
  &-white-primary {
    @include rotating-border(
      var(--active-cell-border-width),
      var(--white-remove-cell-color),
      var(--cell-size),
      var(--cell-size)
    );
  }
  &-white-secondary {
    @include rotating-border(
      var(--active-cell-border-width),
      var(--white-move-cell-color),
      var(--cell-size),
      var(--cell-size)
    );
  }
}

@mixin border($border-width, $border-color, $width, $height) {
  position: relative;
  &::before {
    content: "";
    z-index: 10;
    width: calc($width - 2 * $border-width);
    height: calc($width - 2 * $border-width);
    top: 0;
    left: 0;
    position: absolute;
    border: $border-width solid $border-color;
  }
}

.cell-border {
  &-black-primary {
    @include border(
      var(--active-cell-border-width),
      var(--black-remove-cell-color),
      var(--cell-size),
      var(--cell-size)
    );
  }
  &-white-primary {
    @include border(
      var(--active-cell-border-width),
      var(--white-remove-cell-color),
      var(--cell-size),
      var(--cell-size)
    );
  }
  &-black-secondary {
    @include border(
      var(--active-cell-border-width),
      var(--black-move-cell-color),
      var(--cell-size),
      var(--cell-size)
    );
  }
  &-white-secondary {
    @include border(
      var(--active-cell-border-width),
      var(--white-move-cell-color),
      var(--cell-size),
      var(--cell-size)
    );
  }
}

@mixin circle($background, $diameter) {
  background: $background;
  border-radius: 50%;
  width: $diameter;
  height: $diameter;
}

.checker-black {
  @include circle(var(--black), var(--checker-diameter));
}
.checker-white {
  @include circle(var(--white), var(--checker-diameter));
}

@mixin confetti($n, $times) {
  z-index: 100;
  width: 15px;
  height: 15px;
  background-color: #f2d74e;
  position: absolute;
  left: 50%;
  animation: confetti 5s ease-in-out -2s $times;
  transform-origin: left top;
  @for $i from 1 to $n {
    &:nth-child(#{$i}) {
      @if $i % 3 == 0 {
        background: #ff9a91;
      } @else if $i % 3 == 1 {
        background: #f2d74e;
      } @else {
        background: #95c3de;
      }
      left: random(100) + 0%;
      animation-delay: #{calc((-1 * random(61) - 1) / 10)}s;
    }
  }
  &-container {
    position: absolute;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden !important;
  }

  @keyframes confetti {
    0% {
      transform: rotateZ(15deg) rotateY(0deg) translate(0, 0);
    }
    25% {
      transform: rotateZ(5deg) rotateY(360deg) translate(-5vw, 20vh);
    }
    50% {
      transform: rotateZ(15deg) rotateY(720deg) translate(5vw, 60vh);
    }
    75% {
      transform: rotateZ(5deg) rotateY(1080deg) translate(-10vw, 80vh);
    }
    100% {
      transform: rotateZ(15deg) rotateY(1440deg)
        translate(10vw, calc(100vh - 15px));
    }
  }
}

.confetti {
  @include confetti(75, infinite);
}
